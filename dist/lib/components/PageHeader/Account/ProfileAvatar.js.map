{"version":3,"file":"ProfileAvatar.js","sources":["../../../../../lib/components/PageHeader/Account/ProfileAvatar.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport classnames from 'classnames'\nimport { renderIcon } from '@download/blockies'\n\nconst BLOCKIE_DIAMETER = 24\n\nexport function ProfileAvatar(props) {\n  const { className, usersAddress } = props\n\n  if (!usersAddress) {\n    return null\n  }\n\n  const image = (\n    <div\n      className={classnames(\n        'profile-img my-auto relative inline-flex justify-center flex-col bg-white rounded-full shadow-sm',\n        className\n      )}\n      style={{\n        padding: 1,\n        height: BLOCKIE_DIAMETER,\n        width: BLOCKIE_DIAMETER\n      }}\n    >\n      <BlockieIdenticon\n        address={usersAddress}\n        alt={`Ethereum address: ${usersAddress}`}\n        className='rounded-full shadow-inner'\n      />\n    </div>\n  )\n\n  return image\n}\n\nconst BlockieIdenticon = ({ address, diameter, alt, className }) => {\n  const [dataUrl, setDataUrl] = useState(null)\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    renderIcon({ seed: address.toLowerCase() }, canvas)\n    const updatedDataUrl = canvas.toDataURL()\n\n    if (updatedDataUrl !== dataUrl) {\n      setDataUrl(updatedDataUrl)\n    }\n  }, [dataUrl, address])\n\n  return (\n    <>\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n      <img className={className} src={dataUrl} height={diameter} width={diameter} alt={alt || ''} />\n    </>\n  )\n}\n\nBlockieIdenticon.defaultProps = {\n  address: undefined,\n  diameter: BLOCKIE_DIAMETER,\n  alt: '',\n  className: ''\n}\n"],"names":["BLOCKIE_DIAMETER","ProfileAvatar","props","className","usersAddress","image","React","classnames","padding","height","width","BlockieIdenticon","address","diameter","alt","useState","dataUrl","setDataUrl","canvasRef","useRef","useEffect","canvas","current","renderIcon","seed","toLowerCase","updatedDataUrl","toDataURL","display","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;AAIA,IAAMA,gBAAgB,GAAG,EAAzB;AAEO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,MAAQC,SAAR,GAAoCD,KAApC,CAAQC,SAAR;AAAA,MAAmBC,YAAnB,GAAoCF,KAApC,CAAmBE,YAAnB;;AAEA,MAAI,CAACA,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,MAAMC,KAAK,gBACTC;AACE,IAAA,SAAS,EAAEC,KAAU,CACnB,kGADmB,EAEnBJ,SAFmB,CADvB;AAKE,IAAA,KAAK,EAAE;AACLK,MAAAA,OAAO,EAAE,CADJ;AAELC,MAAAA,MAAM,EAAET,gBAFH;AAGLU,MAAAA,KAAK,EAAEV;AAHF;AALT,kBAWEM,wCAAC,gBAAD;AACE,IAAA,OAAO,EAAEF,YADX;AAEE,IAAA,GAAG,8BAAuBA,YAAvB,CAFL;AAGE,IAAA,SAAS,EAAC;AAHZ,IAXF,CADF;AAoBA,SAAOC,KAAP;AACD;;AAED,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA2C;AAAA,MAAxCC,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,GAAqB,QAArBA,GAAqB;AAAA,MAAhBX,SAAgB,QAAhBA,SAAgB;;AAClE,kBAA8BY,cAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,SAAS,GAAGC,YAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMC,MAAM,GAAGH,SAAS,CAACI,OAAzB;AACAC,IAAAA,mBAAU,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,OAAO,CAACa,WAAR;AAAR,KAAD,EAAkCJ,MAAlC,CAAV;AACA,QAAMK,cAAc,GAAGL,MAAM,CAACM,SAAP,EAAvB;;AAEA,QAAID,cAAc,KAAKV,OAAvB,EAAgC;AAC9BC,MAAAA,UAAU,CAACS,cAAD,CAAV;AACD;AACF,GARQ,EAQN,CAACV,OAAD,EAAUJ,OAAV,CARM,CAAT;AAUA,sBACEN,+FACEA;AAAQ,IAAA,GAAG,EAAEY,SAAb;AAAwB,IAAA,KAAK,EAAE;AAAEU,MAAAA,OAAO,EAAE;AAAX;AAA/B,IADF,eAEEtB;AAAK,IAAA,SAAS,EAAEH,SAAhB;AAA2B,IAAA,GAAG,EAAEa,OAAhC;AAAyC,IAAA,MAAM,EAAEH,QAAjD;AAA2D,IAAA,KAAK,EAAEA,QAAlE;AAA4E,IAAA,GAAG,EAAEC,GAAG,IAAI;AAAxF,IAFF,CADF;AAMD,CApBD;;AAsBAH,gBAAgB,CAACkB,YAAjB,GAAgC;AAC9BjB,EAAAA,OAAO,EAAEkB,SADqB;AAE9BjB,EAAAA,QAAQ,EAAEb,gBAFoB;AAG9Bc,EAAAA,GAAG,EAAE,EAHyB;AAI9BX,EAAAA,SAAS,EAAE;AAJmB,CAAhC;;;;"}